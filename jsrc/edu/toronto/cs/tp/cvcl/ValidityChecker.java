/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.21
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.toronto.cs.tp.cvcl;


public class ValidityChecker {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected ValidityChecker(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      throw new UnsupportedOperationException("C++ destructor does not have public access");
    }
    swigCPtr = 0;
  }

  protected static long getCPtr(ValidityChecker obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static CLFlags createFlags() {
    return new CLFlags(JavaCVCJNI.ValidityChecker_createFlags(), true);
  }

  public static ValidityChecker create() {
    long cPtr = JavaCVCJNI.ValidityChecker_create__SWIG_0();
    return (cPtr == 0) ? null : new ValidityChecker(cPtr, false);
  }

  public static ValidityChecker create(CLFlags flags) {
    long cPtr = JavaCVCJNI.ValidityChecker_create__SWIG_1(CLFlags.getCPtr(flags));
    return (cPtr == 0) ? null : new ValidityChecker(cPtr, false);
  }

  public Type boolType() {
    return new Type(JavaCVCJNI.ValidityChecker_boolType(swigCPtr), true);
  }

  public Type realType() {
    return new Type(JavaCVCJNI.ValidityChecker_realType(swigCPtr), true);
  }

  public Type intType() {
    return new Type(JavaCVCJNI.ValidityChecker_intType(swigCPtr), true);
  }

  public Type subrangeType(Expr l, Expr r) {
    return new Type(JavaCVCJNI.ValidityChecker_subrangeType(swigCPtr, Expr.getCPtr(l), Expr.getCPtr(r)), true);
  }

  public Type subtypeType(Expr pred) {
    return new Type(JavaCVCJNI.ValidityChecker_subtypeType(swigCPtr, Expr.getCPtr(pred)), true);
  }

  public Type tupleType(Type type0, Type type1) {
    return new Type(JavaCVCJNI.ValidityChecker_tupleType__SWIG_0(swigCPtr, Type.getCPtr(type0), Type.getCPtr(type1)), true);
  }

  public Type tupleType(Type type0, Type type1, Type type2) {
    return new Type(JavaCVCJNI.ValidityChecker_tupleType__SWIG_1(swigCPtr, Type.getCPtr(type0), Type.getCPtr(type1), Type.getCPtr(type2)), true);
  }

  public Type tupleType(CVectorType types) {
    return new Type(JavaCVCJNI.ValidityChecker_tupleType__SWIG_2(swigCPtr, CVectorType.getCPtr(types)), true);
  }

  public Type recordType(String field, Type type) {
    return new Type(JavaCVCJNI.ValidityChecker_recordType__SWIG_0(swigCPtr, field, Type.getCPtr(type)), true);
  }

  public Type recordType(String field0, Type type0, String field1, Type type1) {
    return new Type(JavaCVCJNI.ValidityChecker_recordType__SWIG_1(swigCPtr, field0, Type.getCPtr(type0), field1, Type.getCPtr(type1)), true);
  }

  public Type recordType(String field0, Type type0, String field1, Type type1, String field2, Type type2) {
    return new Type(JavaCVCJNI.ValidityChecker_recordType__SWIG_2(swigCPtr, field0, Type.getCPtr(type0), field1, Type.getCPtr(type1), field2, Type.getCPtr(type2)), true);
  }

  public Type recordType(SWIGTYPE_p_std__vectorTstd__string_t fields, CVectorType types) {
    return new Type(JavaCVCJNI.ValidityChecker_recordType__SWIG_3(swigCPtr, SWIGTYPE_p_std__vectorTstd__string_t.getCPtr(fields), CVectorType.getCPtr(types)), true);
  }

  public Type arrayType(Type typeIndex, Type typeData) {
    return new Type(JavaCVCJNI.ValidityChecker_arrayType(swigCPtr, Type.getCPtr(typeIndex), Type.getCPtr(typeData)), true);
  }

  public Type funType(Type typeDom, Type typeRan) {
    return new Type(JavaCVCJNI.ValidityChecker_funType(swigCPtr, Type.getCPtr(typeDom), Type.getCPtr(typeRan)), true);
  }

  public Type createType(String typeName) {
    return new Type(JavaCVCJNI.ValidityChecker_createType__SWIG_0(swigCPtr, typeName), true);
  }

  public Type createType(String typeName, Type def) {
    return new Type(JavaCVCJNI.ValidityChecker_createType__SWIG_1(swigCPtr, typeName, Type.getCPtr(def)), true);
  }

  public Type lookupType(String typeName) {
    return new Type(JavaCVCJNI.ValidityChecker_lookupType(swigCPtr, typeName), true);
  }

  public ExprManager getEM() {
    long cPtr = JavaCVCJNI.ValidityChecker_getEM(swigCPtr);
    return (cPtr == 0) ? null : new ExprManager(cPtr, false);
  }

  public Expr varExpr(String name, Type type) {
    return new Expr(JavaCVCJNI.ValidityChecker_varExpr(swigCPtr, name, Type.getCPtr(type)), true);
  }

  public Expr boundVarExpr(String name, String uid, Type type) {
    return new Expr(JavaCVCJNI.ValidityChecker_boundVarExpr(swigCPtr, name, uid, Type.getCPtr(type)), true);
  }

  public Expr lookupVar(String name, Type type) {
    return new Expr(JavaCVCJNI.ValidityChecker_lookupVar(swigCPtr, name, Type.getCPtr(type)), true);
  }

  public Type getType(Expr e) {
    return new Type(JavaCVCJNI.ValidityChecker_getType(swigCPtr, Expr.getCPtr(e)), true);
  }

  public Type getBaseType(Expr e) {
    return new Type(JavaCVCJNI.ValidityChecker_getBaseType(swigCPtr, Expr.getCPtr(e)), true);
  }

  public Expr listExpr(CVectorExpr kids) {
    return new Expr(JavaCVCJNI.ValidityChecker_listExpr__SWIG_0(swigCPtr, CVectorExpr.getCPtr(kids)), true);
  }

  public Expr listExpr(Expr e1) {
    return new Expr(JavaCVCJNI.ValidityChecker_listExpr__SWIG_1(swigCPtr, Expr.getCPtr(e1)), true);
  }

  public Expr listExpr(Expr e1, Expr e2) {
    return new Expr(JavaCVCJNI.ValidityChecker_listExpr__SWIG_2(swigCPtr, Expr.getCPtr(e1), Expr.getCPtr(e2)), true);
  }

  public Expr listExpr(Expr e1, Expr e2, Expr e3) {
    return new Expr(JavaCVCJNI.ValidityChecker_listExpr__SWIG_3(swigCPtr, Expr.getCPtr(e1), Expr.getCPtr(e2), Expr.getCPtr(e3)), true);
  }

  public Expr listExpr(String op, CVectorExpr kids) {
    return new Expr(JavaCVCJNI.ValidityChecker_listExpr__SWIG_4(swigCPtr, op, CVectorExpr.getCPtr(kids)), true);
  }

  public Expr listExpr(String op, Expr e1) {
    return new Expr(JavaCVCJNI.ValidityChecker_listExpr__SWIG_5(swigCPtr, op, Expr.getCPtr(e1)), true);
  }

  public Expr listExpr(String op, Expr e1, Expr e2) {
    return new Expr(JavaCVCJNI.ValidityChecker_listExpr__SWIG_6(swigCPtr, op, Expr.getCPtr(e1), Expr.getCPtr(e2)), true);
  }

  public void printExpr(Expr e) {
    JavaCVCJNI.ValidityChecker_printExpr(swigCPtr, Expr.getCPtr(e));
  }

  public Expr parseExpr(Expr e) {
    return new Expr(JavaCVCJNI.ValidityChecker_parseExpr(swigCPtr, Expr.getCPtr(e)), true);
  }

  public Expr importExpr(Expr e) {
    return new Expr(JavaCVCJNI.ValidityChecker_importExpr(swigCPtr, Expr.getCPtr(e)), true);
  }

  public Type importType(Type t) {
    return new Type(JavaCVCJNI.ValidityChecker_importType(swigCPtr, Type.getCPtr(t)), true);
  }

  public Expr trueExpr() {
    return new Expr(JavaCVCJNI.ValidityChecker_trueExpr(swigCPtr), true);
  }

  public Expr falseExpr() {
    return new Expr(JavaCVCJNI.ValidityChecker_falseExpr(swigCPtr), true);
  }

  public Expr notExpr(Expr child) {
    return new Expr(JavaCVCJNI.ValidityChecker_notExpr(swigCPtr, Expr.getCPtr(child)), true);
  }

  public Expr andExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_andExpr__SWIG_0(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr andExpr(CVectorExpr children) {
    return new Expr(JavaCVCJNI.ValidityChecker_andExpr__SWIG_1(swigCPtr, CVectorExpr.getCPtr(children)), true);
  }

  public Expr orExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_orExpr__SWIG_0(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr orExpr(CVectorExpr children) {
    return new Expr(JavaCVCJNI.ValidityChecker_orExpr__SWIG_1(swigCPtr, CVectorExpr.getCPtr(children)), true);
  }

  public Expr impliesExpr(Expr hyp, Expr conc) {
    return new Expr(JavaCVCJNI.ValidityChecker_impliesExpr(swigCPtr, Expr.getCPtr(hyp), Expr.getCPtr(conc)), true);
  }

  public Expr iffExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_iffExpr(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr eqExpr(Expr child0, Expr child1) {
    return new Expr(JavaCVCJNI.ValidityChecker_eqExpr(swigCPtr, Expr.getCPtr(child0), Expr.getCPtr(child1)), true);
  }

  public Expr iteExpr(Expr ifpart, Expr thenpart, Expr elsepart) {
    return new Expr(JavaCVCJNI.ValidityChecker_iteExpr(swigCPtr, Expr.getCPtr(ifpart), Expr.getCPtr(thenpart), Expr.getCPtr(elsepart)), true);
  }

  public Op createOp(String name, Type type) {
    return new Op(JavaCVCJNI.ValidityChecker_createOp(swigCPtr, name, Type.getCPtr(type)), true);
  }

  public Expr funExpr(Op op, Expr child) {
    return new Expr(JavaCVCJNI.ValidityChecker_funExpr__SWIG_0(swigCPtr, Op.getCPtr(op), Expr.getCPtr(child)), true);
  }

  public Expr funExpr(Op op, Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_funExpr__SWIG_1(swigCPtr, Op.getCPtr(op), Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr funExpr(Op op, Expr child0, Expr child1, Expr child2) {
    return new Expr(JavaCVCJNI.ValidityChecker_funExpr__SWIG_2(swigCPtr, Op.getCPtr(op), Expr.getCPtr(child0), Expr.getCPtr(child1), Expr.getCPtr(child2)), true);
  }

  public Expr funExpr(Op op, CVectorExpr children) {
    return new Expr(JavaCVCJNI.ValidityChecker_funExpr__SWIG_3(swigCPtr, Op.getCPtr(op), CVectorExpr.getCPtr(children)), true);
  }

  public Expr ratExpr(int n, int d) {
    return new Expr(JavaCVCJNI.ValidityChecker_ratExpr__SWIG_0(swigCPtr, n, d), true);
  }

  public Expr ratExpr(String n, String d, int base) {
    return new Expr(JavaCVCJNI.ValidityChecker_ratExpr__SWIG_1(swigCPtr, n, d, base), true);
  }

  public Expr ratExpr(String n, int base) {
    return new Expr(JavaCVCJNI.ValidityChecker_ratExpr__SWIG_2(swigCPtr, n, base), true);
  }

  public Expr uminusExpr(Expr child) {
    return new Expr(JavaCVCJNI.ValidityChecker_uminusExpr(swigCPtr, Expr.getCPtr(child)), true);
  }

  public Expr plusExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_plusExpr(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr minusExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_minusExpr(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr multExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_multExpr(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr powExpr(Expr x, Expr n) {
    return new Expr(JavaCVCJNI.ValidityChecker_powExpr(swigCPtr, Expr.getCPtr(x), Expr.getCPtr(n)), true);
  }

  public Expr divideExpr(Expr numerator, Expr denominator) {
    return new Expr(JavaCVCJNI.ValidityChecker_divideExpr(swigCPtr, Expr.getCPtr(numerator), Expr.getCPtr(denominator)), true);
  }

  public Expr ltExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_ltExpr(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr leExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_leExpr(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr gtExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_gtExpr(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr geExpr(Expr left, Expr right) {
    return new Expr(JavaCVCJNI.ValidityChecker_geExpr(swigCPtr, Expr.getCPtr(left), Expr.getCPtr(right)), true);
  }

  public Expr floorExpr(Expr expr) {
    return new Expr(JavaCVCJNI.ValidityChecker_floorExpr(swigCPtr, Expr.getCPtr(expr)), true);
  }

  public Expr recordExpr(String field, Expr expr) {
    return new Expr(JavaCVCJNI.ValidityChecker_recordExpr__SWIG_0(swigCPtr, field, Expr.getCPtr(expr)), true);
  }

  public Expr recordExpr(String field0, Expr expr0, String field1, Expr expr1) {
    return new Expr(JavaCVCJNI.ValidityChecker_recordExpr__SWIG_1(swigCPtr, field0, Expr.getCPtr(expr0), field1, Expr.getCPtr(expr1)), true);
  }

  public Expr recordExpr(String field0, Expr expr0, String field1, Expr expr1, String field2, Expr expr2) {
    return new Expr(JavaCVCJNI.ValidityChecker_recordExpr__SWIG_2(swigCPtr, field0, Expr.getCPtr(expr0), field1, Expr.getCPtr(expr1), field2, Expr.getCPtr(expr2)), true);
  }

  public Expr recordExpr(SWIGTYPE_p_std__vectorTstd__string_t fields, CVectorExpr exprs) {
    return new Expr(JavaCVCJNI.ValidityChecker_recordExpr__SWIG_3(swigCPtr, SWIGTYPE_p_std__vectorTstd__string_t.getCPtr(fields), CVectorExpr.getCPtr(exprs)), true);
  }

  public Expr recSelectExpr(Expr record, String field) {
    return new Expr(JavaCVCJNI.ValidityChecker_recSelectExpr(swigCPtr, Expr.getCPtr(record), field), true);
  }

  public Expr recUpdateExpr(Expr record, String field, Expr newValue) {
    return new Expr(JavaCVCJNI.ValidityChecker_recUpdateExpr(swigCPtr, Expr.getCPtr(record), field, Expr.getCPtr(newValue)), true);
  }

  public Expr readExpr(Expr array, Expr index) {
    return new Expr(JavaCVCJNI.ValidityChecker_readExpr(swigCPtr, Expr.getCPtr(array), Expr.getCPtr(index)), true);
  }

  public Expr writeExpr(Expr array, Expr index, Expr newValue) {
    return new Expr(JavaCVCJNI.ValidityChecker_writeExpr(swigCPtr, Expr.getCPtr(array), Expr.getCPtr(index), Expr.getCPtr(newValue)), true);
  }

  public Expr tupleExpr(CVectorExpr exprs) {
    return new Expr(JavaCVCJNI.ValidityChecker_tupleExpr(swigCPtr, CVectorExpr.getCPtr(exprs)), true);
  }

  public Expr tupleSelectExpr(Expr tuple, int index) {
    return new Expr(JavaCVCJNI.ValidityChecker_tupleSelectExpr(swigCPtr, Expr.getCPtr(tuple), index), true);
  }

  public Expr tupleUpdateExpr(Expr tuple, int index, Expr newValue) {
    return new Expr(JavaCVCJNI.ValidityChecker_tupleUpdateExpr(swigCPtr, Expr.getCPtr(tuple), index, Expr.getCPtr(newValue)), true);
  }

  public Expr datatypeUpdateExpr(Expr dt, Expr accessor, Expr newValue) {
    return new Expr(JavaCVCJNI.ValidityChecker_datatypeUpdateExpr(swigCPtr, Expr.getCPtr(dt), Expr.getCPtr(accessor), Expr.getCPtr(newValue)), true);
  }

  public Expr forallExpr(CVectorExpr vars, Expr body) {
    return new Expr(JavaCVCJNI.ValidityChecker_forallExpr(swigCPtr, CVectorExpr.getCPtr(vars), Expr.getCPtr(body)), true);
  }

  public Expr existsExpr(CVectorExpr vars, Expr body) {
    return new Expr(JavaCVCJNI.ValidityChecker_existsExpr(swigCPtr, CVectorExpr.getCPtr(vars), Expr.getCPtr(body)), true);
  }

  public Expr lambdaExpr(CVectorExpr vars, Expr body) {
    return new Expr(JavaCVCJNI.ValidityChecker_lambdaExpr(swigCPtr, CVectorExpr.getCPtr(vars), Expr.getCPtr(body)), true);
  }

  public Expr simulateExpr(Expr f, Expr s0, CVectorExpr inputs, Expr n) {
    return new Expr(JavaCVCJNI.ValidityChecker_simulateExpr(swigCPtr, Expr.getCPtr(f), Expr.getCPtr(s0), CVectorExpr.getCPtr(inputs), Expr.getCPtr(n)), true);
  }

  public void assertFormula(Expr e) {
    if (sw == null)
      sw = new edu.toronto.cs.util.StopWatch ();
    else
      sw.resume ();
    JavaCVCJNI.ValidityChecker_assertFormula(swigCPtr, Expr.getCPtr(e));
    sw.pause ();
  }

  public Expr simplify(Expr e) {
    return new Expr(JavaCVCJNI.ValidityChecker_simplify(swigCPtr, Expr.getCPtr(e)), true);
  }

  public Theorem3 simplifyThm(Expr e) {
    return new Theorem3(JavaCVCJNI.ValidityChecker_simplifyThm(swigCPtr, Expr.getCPtr(e)), true);
  }

  public void printV(Expr e) {
    JavaCVCJNI.ValidityChecker_printV(swigCPtr, Expr.getCPtr(e));
  }

  public edu.toronto.cs.util.StopWatch sw = null;
  public boolean query(Expr e, boolean tcc) {
    if (sw == null)
      sw = new edu.toronto.cs.util.StopWatch ();
    else
      sw.resume ();
    boolean result = 
      JavaCVCJNI.ValidityChecker_query(swigCPtr, Expr.getCPtr(e), tcc);
    sw.pause ();
    return result;
  }

  public void getAssertions(CVectorExpr assertions) {
    JavaCVCJNI.ValidityChecker_getAssertions(swigCPtr, CVectorExpr.getCPtr(assertions));
  }

  public void getCounterExample(CVectorExpr assertions) {
    JavaCVCJNI.ValidityChecker_getCounterExample(swigCPtr, CVectorExpr.getCPtr(assertions));
  }

  public boolean inconsistent(CVectorExpr assumptions) {
    return JavaCVCJNI.ValidityChecker_inconsistent(swigCPtr, CVectorExpr.getCPtr(assumptions));
  }

  public Proof getProof() {
    return new Proof(JavaCVCJNI.ValidityChecker_getProof(swigCPtr), true);
  }

  public void getAssumptions(CVectorExpr assumptions) {
    JavaCVCJNI.ValidityChecker_getAssumptions(swigCPtr, CVectorExpr.getCPtr(assumptions));
  }

  public Expr getTCC() {
    return new Expr(JavaCVCJNI.ValidityChecker_getTCC(swigCPtr), false);
  }

  public void getAssumptionsTCC(CVectorExpr assumptions) {
    JavaCVCJNI.ValidityChecker_getAssumptionsTCC(swigCPtr, CVectorExpr.getCPtr(assumptions));
  }

  public Proof getProofTCC() {
    return new Proof(JavaCVCJNI.ValidityChecker_getProofTCC(swigCPtr), false);
  }

  public Expr getClosure() {
    return new Expr(JavaCVCJNI.ValidityChecker_getClosure(swigCPtr), false);
  }

  public Proof getProofClosure() {
    return new Proof(JavaCVCJNI.ValidityChecker_getProofClosure(swigCPtr), false);
  }

  public void push() {
    JavaCVCJNI.ValidityChecker_push(swigCPtr);
  }

  public void pop() {
    JavaCVCJNI.ValidityChecker_pop(swigCPtr);
  }

  public void popto(int scopeLevel) {
    JavaCVCJNI.ValidityChecker_popto(swigCPtr, scopeLevel);
  }

  public int scopeLevel() {
    return JavaCVCJNI.ValidityChecker_scopeLevel(swigCPtr);
  }

  public Context createContext() {
    long cPtr = JavaCVCJNI.ValidityChecker_createContext(swigCPtr);
    return (cPtr == 0) ? null : new Context(cPtr, false);
  }

  public Context getCurrentContext() {
    long cPtr = JavaCVCJNI.ValidityChecker_getCurrentContext(swigCPtr);
    return (cPtr == 0) ? null : new Context(cPtr, false);
  }

  public Context switchContext(Context context) {
    long cPtr = JavaCVCJNI.ValidityChecker_switchContext(swigCPtr, Context.getCPtr(context));
    return (cPtr == 0) ? null : new Context(cPtr, false);
  }

  public Statistics getStatistics() {
    return new Statistics(JavaCVCJNI.ValidityChecker_getStatistics(swigCPtr), false);
  }

  public void printStatistics() {
    JavaCVCJNI.ValidityChecker_printStatistics(swigCPtr);
  }

  public ValidityChecker() {
    this(JavaCVCJNI.new_ValidityChecker__SWIG_0(), true);
  }

  public ValidityChecker(CLFlags flags) {
    this(JavaCVCJNI.new_ValidityChecker__SWIG_1(CLFlags.getCPtr(flags)), true);
  }

}
